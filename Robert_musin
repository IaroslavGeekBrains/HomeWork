# Работа с Git

## 1. Проверка наличия установленного Git

git version - Проверка наличия/отсутствия программы Git

## 2. Установка Git

Загружаем Git с сайта https://git-scm.com/downloads

## 3. Настройка Git

Для персонализации программы выполняем:

git config --global user.name "Ваше имя"
git config --global user.email "email@example.com"

## 4. Команды для работы с Git

git status - показывает текущий статус репозитория

git add - индексирует изменения для последующего коммита

git commit - сохраняет изменения в репозитории

git diff - показывает разницу между проиндексированным файлом и файлом сохраненном в репозитории

git log - показывает коммиты, сделанные в репозитории

git checkout - позволяет переключаться между ветками и коммитами

git branch - показывает имеющиеся ветки

git merge - объединяет две ветки 

git pull - загружает содержимое из удаленного репозитория и сливает с локальным

git push - отправляет файлы из локальноного репозитория на удаленный 

## 5. Дополнительные возможности команд для Git

git add . - добавляет все измененные и модифицированные файлы в репозиторий

git commit -m "text" - добовляет все файлы и позволяет оставить сообщение к сохранению

git log --oneline - показывает историю изменений репозитория по одной строке на коммит

## 6. Игнорирование файлов Git 

Для игнорирования файлов в репозиторие необходимо создать новый файл ".gitignore" и вписать в него имя файла который нужно игнорировать например: "icon.png" или если нужно игнорировать все файлы определенного расширения можно ввести "*.png"

## 7. Создание веток в Git

git branch <имя новой ветки> - создание новой ветки

git checkout -b <имя новой ветки> - создание новой ветки с переключением на нее

## 8. Слияние веток

git merge <new_branch> - Сливает ветку new_branch с основной, например main. Команду выполнять с ветки В КОТОРУЮ идет слияние, например с ветки main/master. 

## 9. Удаление веток

git branch -d <назвение ветки> - удаляет указанную ветку

Перед удалением ветки необходимо провести слияние с основной веткой (master), если слияние небыло призведено, то терминал выдаст ошибку о том что есть не сохраненные измененные файлы в ветке. Для удаления с игнорированием предупреждения нужно ввести команду: 

git branch -D <название ветки>

## 10. Работа с удалённым репозиториями

1. Создать аккаунт на GitHub
2. Создать локальный репозиторий.
3. Связать удалённый репозиторий с локальным командой `git remote add origin <ссылка>`
4. Получить если есть файлы на удаленном репозиторие командой `git pull`
5. После окончания работы с локальным репозиторием ПЕРВЫЙ раз отправить файлы на удаленный командой 
`git push -u origin main` , после этого можно отправлять сокращенной командой `git push`